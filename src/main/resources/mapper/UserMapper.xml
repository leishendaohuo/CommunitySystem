<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="maven.CommunitySystem.dao.IUserDao">
    <resultMap id="BaseResultMap" type="maven.CommunitySystem.entity.User">
        <result column="id" property="id" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="college" property="college" jdbcType="VARCHAR" />
        <result column="major" property="major" jdbcType="VARCHAR" />
        <result column="iclass" property="iclass" jdbcType="VARCHAR" />
        <result column="grade" property="grade" jdbcType="VARCHAR" />
        <result column="usertype" property="usertype" jdbcType="BIGINT" />
        <result column="community" property="community" jdbcType="VARCHAR" />
        <result column="position" property="position" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="BIGINT" />
 
    </resultMap>
 
 
 	<!--用户信息更新 -->
    <update id="changes" parameterType="java.util.Map">
        UPDATE
        usertable
        SET
        username=#{newusername,jdbcType=VARCHAR},
        email=#{newemail,jdbcType=VARCHAR},
        password=#{newpassword,jdbcType=VARCHAR},
        college=#{newcollege,jdbcType=VARCHAR},
        major=#{newmajor,jdbcType=VARCHAR},
        iclass=#{newclass,jdbcType=VARCHAR},
        grade=#{newgrade,jdbcType=VARCHAR}
        WHERE
       	id=#{id,jdbcType=VARCHAR}
    </update>
 
    <!--用户登录 -->
    <select id="Login" parameterType="java.util.Map" resultType="maven.CommunitySystem.entity.User">
        SELECT
        *
        FROM
        usertable
        WHERE
        id=#{id,jdbcType=VARCHAR}
        AND
        password=#{password,jdbcType=VARCHAR}
    </select>
    
    <!--查询社团成员信息-->
    <select id="Checkmemberdata" parameterType="java.lang.String" resultType="maven.CommunitySystem.entity.User">
        SELECT
        *
        FROM
        usertable
        WHERE
        community=#{community,jdbcType=VARCHAR}
    </select>
    
    <!--添加用户 -->
    <insert id="AddUser" parameterType="java.util.Map">  
        INSERT
        IGNORE 
        INTO 
        usertable
        (id,username,password,email,college,major,iclass,grade,usertype,community,position,status) 
        VALUES (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, null, null, null, null, null, 0, null, null,0)  
    </insert>
    
    <!--删除用户 -->
    <delete id="DeleteUser" parameterType="java.util.Map">
        DELETE
        FROM
        usertable
        WHERE
        username=#{username,jdbcType=VARCHAR}
        AND
        password=#{password,jdbcType=VARCHAR}
    </delete>
    
    <!--用户查询 -->
    <select id="SelectUser" parameterType="java.lang.String" resultType="maven.CommunitySystem.entity.User">
        SELECT
        *
        FROM
        usertable
        WHERE
        username=#{username,jdbcType=VARCHAR}
    </select>
    
    <select id="SelectUserId" parameterType="java.lang.String" resultType="maven.CommunitySystem.entity.User">
        SELECT
        *
        FROM
        usertable
        WHERE
        id=#{id,jdbcType=VARCHAR}
    </select>
    
    <select id="SelectUserByEmail" parameterType="java.lang.String" resultType="maven.CommunitySystem.entity.User">
        SELECT
        *
        FROM
        usertable
        WHERE
        email=#{email,jdbcType=VARCHAR}
    </select>
    
    <!--更新信息 -->
    <update id="applycommunity" parameterType="java.util.Map">
        UPDATE
        usertable
        SET
        community=#{community,jdbcType=VARCHAR},
        status=1
        WHERE
        id=#{id,jdbcType=VARCHAR}
    </update>
    
    <!--更新信息 -->
    <update id="cancelcommunity" parameterType="java.util.Map">
        UPDATE
        usertable
        SET
        status=0
        WHERE
        id=#{id,jdbcType=VARCHAR}
        AND
        community=#{community,jdbcType=VARCHAR}
    </update>
    
    <!--更新信息 -->
    <update id="UpdateUser" parameterType="java.util.Map">
        UPDATE
        usertable
        SET
        username=#{newname,jdbcType=VARCHAR}
        WHERE
        username=#{oldname,jdbcType=VARCHAR}
    </update>
 
</mapper> 